@using System.Linq;
@using DataObjects
@using Querys

@helper RestaurantSearch(string search)
{
    RestaurantQuerys querys = new RestaurantQuerys();

    List<Restaurant> restaurants = querys.GetAllRestaurants();

    if (restaurants == null)
    {
        <div class="container">
            <div class="section">
                <div class="row">
                    <div class="col s12 center">
                        <h3><i class="mdi-content-send brown-text"></i></h3>
                        <h4>Zoek resultaten</h4>
                    </div>
                </div>
                <div>
                    Geen resultaten
                </div>
            </div>
        </div>
    }
    else
    {
        var result = restaurants
            .Where(t =>
                t.City.Equals(search) ||
                t.PostalCode.Equals(search) ||
                t.RestaurantName.Contains(search) ||
                t.Description.Contains(search))
            .ToList();


        <div class="container">
            <div class="section">
                <div class="row">
                    <div class="col s12 center">
                        <h3><i class="mdi-content-send brown-text"></i></h3>
                        <h4>Zoek resultaten</h4>
                    </div>
                </div>
                <div class="row">
                    @foreach (Restaurant res in result)
                    {
                        <div class="col m4">
                            <div class="card">
                                <div class="card-image">
                                    <img src="~/Assets/img/restaurant_stock.jpg">
                                    <span class="card-title" style="width: 100%; background: rgba(0, 0, 0, 0.5);">@res.RestaurantName<i class="small material-icons right">star</i></span>
                                </div>
                                <div class="card-content">
                                    <p>
                                        Locatie: <br>
                                        @res.City <br>
                                        @res.PostalCode <br>
                                        @res.HouseNumber @res.HouseNumberPrefix <br>
                                        Extra informatie: <br>
                                        @res.Description <br>

                                    </p>
                                </div>
                                <div class="card-action">
                                    <a href="~/Reserveren?r=@res.Id">Reserveren</a>

                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
}


@helper TaxiSearch(string search)
{
    TaxiCompanyQuerys querys = new TaxiCompanyQuerys();

    List<TaxiCompany> taxis = querys.GetAllCompanies();

    if (taxis == null)
    {
        <div class="container">
            <div class="section">
                <div class="row">
                    <div class="col s12 center">
                        <h3><i class="mdi-content-send brown-text"></i></h3>
                        <h4>Zoek resultaten</h4>
                    </div>
                </div>
                <div>
                    Geen resultaten
                </div>
            </div>
        </div>
    }
    else
    {

        var result = taxis
            .Where(t =>
                t.CompanyLocation.Equals(search) ||
                t.CompanyName.Contains(search))
            .ToList();

        <div class="container">
            <div class="section">
                <div class="row">
                    <div class="col s12 center">
                        <h3><i class="mdi-content-send brown-text"></i></h3>
                        <h4>Zoek resultaten</h4>
                    </div>
                </div>
                <div class="row">
                    @foreach (TaxiCompany company in result)
                    {
                        <div class="col m4">
                            <div class="card">
                                <div class="card-image">
                                    <img src="~/Assets/img/taxi_stock.jpg">
                                    <span class="card-title" style="width: 100%; background: rgba(0, 0, 0, 0.5);">@company.CompanyName<i class="small material-icons right">star</i></span>
                                </div>
                                <div class="card-content">
                                    <p>
                                        Locatie: <br>
                                        @company.CompanyLocation <br>
                                        Extra informatie: <br>
                                        @company.Description <br>
                                    </p>
                                </div>
                                <div class="card-action">
                                    <a href="~/TaxiReservation?taxi=@company.Id">Reserveren</a>

                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
}

@helper NotificationRestaurantBlock(int UserId)
{

    RestaurantReservationQuerys querys = new RestaurantReservationQuerys();

    RestaurantQuerys rquerys = new RestaurantQuerys();

    UserInfoQuerys uquerys = new UserInfoQuerys();

    var uInfo = uquerys.GetUserInfo(UserId.ToString());

    List<RestaurantReservation> reservations = querys.GetAllReservationsFromUser(uInfo.Id);

    if (reservations.Count != 0)
    {
        foreach (RestaurantReservation reservation in reservations)
        {
            var tempData = rquerys.GetRestaurant(reservation.RestaurantId);

            <li class="collection-item avatar">
                <i class="material-icons circle green">restaurant</i>
                <span class="title">U heeft een restaurant reservering bij: Restaurant @tempData.RestaurantName</span>
                <p>
                    U heeft een reservering voor @reservation.AmountOfPersons personen. Op de datum: @reservation.Date om @reservation.Time.
                </p>
                @*<a href="" class="secondary-content"><i class="small material-icons">forward</i></a>*@
            </li>
        }
    }
    else
    {
        <p style="text-align:center;"><strong>U heeft nog geen restaurant reserveringen</strong></p>
    }

}

@helper NotificationTaxiBlock(int UserId)
{

    TaxiReservationQuerys querys = new TaxiReservationQuerys();

    TaxiCompanyQuerys tquerys = new TaxiCompanyQuerys();

    UserInfoQuerys uquerys = new UserInfoQuerys();

    var uInfo = uquerys.GetUserInfo(UserId.ToString());

    List<TaxiReservation> reservations = querys.GetAllReservationsFromUser(uInfo.Id);

    if (reservations.Count != 0)
    {
        foreach (TaxiReservation reservation in reservations)
        {
            var tempData = tquerys.GetTaxiCompany(reservation.TaxiCompanyId);

            <li class="collection-item avatar">
                <i class="material-icons circle green">directions_car</i>
                <span class="title">U heeft een taxi reservering bij: Taxi @tempData.CompanyName</span>
                <p>
                    U wordt opgehaald om: @reservation.Date.
                </p>
                @*<a href="" class="secondary-content"><i class="small material-icons">forward</i></a>*@
            </li>
        }
    }
    else
    {
        <p style="text-align:center;"><strong>U heeft nog geen taxi reserveringen</strong></p>
    }

}

@helper NotificationRestaurantOwnerBlock(int ownerId)
{

    RestaurantReservationQuerys querys = new RestaurantReservationQuerys();

    RestaurantQuerys rquerys = new RestaurantQuerys();

    var restaurantData = rquerys.GetRestaurantByOwnerId(ownerId);

    if (restaurantData == null)
    {
        <p style="text-align:center;"><strong>Voeg een bedrijf toe om meldingen te krijgen</strong></p>
    }
    else
    {
        List<RestaurantReservation> reservations = querys.GetAllReservationsFromRestaurant(restaurantData.Id);

        if (reservations.Count != 0)
        {
            foreach (RestaurantReservation reservation in reservations)
            {
                <li class="collection-item avatar">
                    <i class="material-icons circle green">restaurant</i>
                    <span class="title">Er is een nieuwe reservering geplaatst.</span>
                    <p>
                        Reservering voor @reservation.AmountOfPersons personen, op de datum @reservation.Date.
                    </p>
                    @*<a href="" class="secondary-content"><i class="small material-icons">forward</i></a>*@
                </li>
            }
        }
        else
        {
            <p style="text-align:center;"><strong>U heeft nog geen restaurant reserveringen</strong></p>
        }
    }
}

@helper NotificationTaxiOwnerBlock(int ownerId)
{

    TaxiReservationQuerys querys = new TaxiReservationQuerys();

    TaxiCompanyQuerys tquerys = new TaxiCompanyQuerys();

    var taxiData = tquerys.GetTaxiCompanyByOwnerId(ownerId);

    if (taxiData == null)
    {
        <p style="text-align:center;"><strong>Voeg een bedrijf toe om meldingen te krijgen</strong></p>
    }
    else
    {
        List<TaxiReservation> reservations = querys.GetAllReservationsFromTaxiCompany(taxiData.Id);

        if (reservations.Count != 0)
        {
            foreach (TaxiReservation reservation in reservations)
            {
                <li class="collection-item avatar">
                    <i class="material-icons circle green">directions_car</i>
                    <span class="title">Er is een nieuwe reservering geplaatst.</span>
                    <p>
                        Reservering voor @reservation.Date.
                    </p>
                    @*<a href="" class="secondary-content"><i class="small material-icons">forward</i></a>*@
                </li>
            }
        }
        else
        {
            <p style="text-align:center;"><strong>U heeft nog geen taxi reserveringen</strong></p>
        }
    }
}
